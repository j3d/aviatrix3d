/*****************************************************************************
 *                        Web3d.org Copyright (c) 2001
 *                               Java Source
 *
 * This source is licensed under the GNU LGPL v2.1
 * Please read http://www.gnu.org/copyleft/lgpl.html for more information
 *
 * This software comes with the standard NO WARRANTY disclaimer for any
 * purpose. Use it at your own risk. If there's a problem you get to fix it.
 *
 ****************************************************************************/

package org.j3d.aviatrix3d;

// Standard imports

// Application specific imports
import gl4java.GLFunc;
import gl4java.GLEnum;

import gl4java.drawable.GLDrawable;

/**
 * Traverses the render list and performs the specified operations.
 * This list is generated by the Cull stage.
 *
 * @author Alan Hudson
 * @version $Revision: 1.1 $
 */
public class DrawStage
{
    public static final int RENDER = 0;
    public static final int POSTRENDER = 1;

    /** The surface to draw to */
    private GLDrawable gld;

    /** GL context to use for drawing with */
    private GLFunc gl;

    /**
     * Construct a renderable stage that can draw to the given surface
     *
     * @param surface The drawing surface to work with
     */
    public DrawStage(GLDrawable surface)
    {
        gld = surface;
        gl = gld.getGL();
    }

    /**
     * Draw all of the items to the surface now.
     *
     * @param renderList List of nodes to render
     * @param renderOp Operations to perform udring rhe render
     * @param size number of items in each list to work with
     */
    public void draw(Node[] renderList, int[] renderOp, int size)
    {
        for(int i=0; i < size; i++)
        {
            if(renderOp[i] == RENDER)
                renderList[i].render(gld);
            else
                renderList[i].postRender(gld);
        }

        gl.glFlush();
    }
}
